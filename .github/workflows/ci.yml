.github/workflows/ci.yml
# This GitHub Actions workflow automates testing, linting, and security scanning
# for the MyersCybersecurity platform on every push and pull request to the main branch.

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # Sets up a PostgreSQL service container to run integration tests against.
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        # Health check to ensure the database is ready before tests run.
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      # Exposes the test database URL to the steps below.
      DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
      # Set other required secrets for testing. In a real CI environment,
      # these should be configured as GitHub Actions secrets.
      JWT_SECRET_KEY: "test-secret-key"
      ENCRYPTION_KEY: "a_valid_fernet_key_for_testing_must_be_32_bytes_url_safe_base64="
      STRIPE_SECRET_KEY: "sk_test_mock"
      STRIPE_WEBHOOK_SECRET: "whsec_mock"
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install both production and development dependencies for testing
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          # The dev requirements file includes flake8, mypy, pytest.
          # We also add bandit here for security scanning.
          pip install bandit

      - name: Run Linter (Flake8)
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run Security Scan (Bandit)
        run: bandit -r . -ll -ii

      - name: Run Type Check (Mypy)
        run: mypy .

      - name: Run Tests (Pytest)
        run: pytest tests/
