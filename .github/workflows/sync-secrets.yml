# .github/workflows/sync-secrets.yml
# This GitHub Actions workflow securely syncs secrets from GitHub Secrets
# to a specified Render.com service.
# It is designed to be triggered manually for security and control.

name: Sync Render Secrets

on:
  workflow_dispatch:  # Allows manual triggering from the GitHub Actions UI

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
      - name: Sync secrets to Render
        # This step uses cURL to make a PATCH request to the Render API.
        # It updates the environment variables for the service specified
        # by the RENDER_SERVICE_ID secret.
        run: |
          set -e
          API_URL="https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/env-vars"
          AUTH_HEADER="Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"

          echo "Syncing secrets to Render..."
          
          # The JSON payload is constructed using GitHub secrets.
          # Add or remove secrets here as needed.
          response=$(curl -s -w "%{http_code}" -o response.txt -X PATCH "$API_URL" \
            -H "$AUTH_HEADER" \
            -H "Content-Type: application/json" \
            -d '{
              "envVars": [
                {"key": "JWT_SECRET_KEY", "value": "'"${{ secrets.JWT_SECRET_KEY }}"'"},
                {"key": "ENCRYPTION_KEY", "value": "'"${{ secrets.ENCRYPTION_KEY }}"'"},
                {"key": "STRIPE_SECRET_KEY", "value": "'"${{ secrets.STRIPE_SECRET_KEY }}"'"},
                {"key": "STRIPE_WEBHOOK_SECRET", "value": "'"${{ secrets.STRIPE_WEBHOOK_SECRET }}"'"},
                {"key": "SENDGRID_API_KEY", "value": "'"${{ secrets.SENDGRID_API_KEY }}"'"}
              ]
            }')
            
          if [ "$response" != "200" ]; then
            echo "Failed to sync secrets to Render. Response code: $response"
            cat response.txt
            exit 1
          fi
          
          echo "Secrets synced to Render successfully."
